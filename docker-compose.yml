services:
    next:
        build:
            context: .
            dockerfile: ./docker/next/Dockerfile
            platforms:
                - linux/amd64
        env_file:
            - .env
        restart: unless-stopped
        container_name: '${NEXT_CONTAINER_NAME:?err}'
        stdin_open: true
        tty: true
        ports:
            - '3000:3000'
        volumes:
            - .:/home/node/app
        depends_on:
            - postgres
            - minio
            - node

    postgres:
        image: postgres:17
        restart: unless-stopped
        container_name: '${POSTGRES_CONTAINER_NAME:?err}'
        ports:
            - '5432:5432'
        environment:
            POSTGRES_USER: '${POSTGRES_USER:?err}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:?err}'
            POSTGRES_DB: '${POSTGRES_DB:?err}'
        volumes:
            - ./data/postgresql:/var/lib/postgresql/data

    minio:
        container_name: '${MINIO_CONTAINER_NAME:?err}'
        image: minio/minio
        environment:
            MINIO_ACCESS_KEY: '${MINIO_ACCESS_KEY:?err}'
            MINIO_SECRET_KEY: '${MINIO_SECRET_KEY:?err}'
        command: server /data --console-address ":9001"
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - ./data/minio:/data

    node:
        build:
            context: ${NODE_PROJECT_PATH:?err}
            dockerfile: ./docker/node/Dockerfile
            platforms:
                - linux/amd64
        env_file:
            - ${NODE_PROJECT_PATH:?err}/.env
        restart: unless-stopped
        container_name: '${NODE_CONTAINER_NAME:?err}'
        stdin_open: true
        tty: true
        ports:
            - '8000:8000'
        volumes:
            - ${NODE_PROJECT_PATH:?err}:/home/node/app
